#+TITLE: Using Kibana to See Data from Elasticsearch
#+AUTHOR: Andrew Caird
#+EMAIL: acaird@umich.edu
#+OPTIONS: ':t H:3 \n:nil ^:{} author:t toc:nil
#+CREATOR: Emacs 24.3.1 (Org mode 8.2.7b)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+MACRO: title Using Kibana to See Data from Elasticsearch

#+BEGIN_HTML
---
layout: page
title: Using Kibana to See Data from Elasticsearch
---
#+END_HTML

#+BEGIN_HTML
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-55726337-1', 'auto');
  ga('send', 'pageview');

</script>
#+END_HTML

The Kibana interface lets you create charts and tables out of various
pieces of data in Elasticsearch.  It also allows you to filter data
into or out of the current set and query that data for specific terms
or Booleaned[fn:1] sets of terms.

#+CAPTION: Kibana Representation of Software Usage on one Windows
#+CAPTION: Computer
#+ATTR_HTML: :width 80%
[[./images/kibana-software-windows.PNG]]

On this screen you can see the ten most commonly launched binaries,
with ~sh.exe~ as the most common.  (This particular Windows desktop
computer is used by one of the CAEN staff and mostly for integration
testing, and runs ~git~ commands a lot of the time, which is why you
see this particular set of binaries being popular.)  The same "Top 10"
data is shown in a pie chart.

The list of "Events Over Time" shows how frequently programs are
started in one hour increments.  The peak on this graph is just over
500 binary launches in an hour at 4:00pm on 8/18.

There is also a list of all of the binaries launched, by computer,
person, process identifier, and (for processes that are ending) their
elapsed time.

#+CAPTION: Kibana Representation of Software Usage on our HPC
#+CAPTION: Cluster
#+ATTR_HTML: :width 80%
[[./images/kibana-software-flux.PNG]]

The screen of the software usage data from the HPC cluster shows some
similar information (top 10 executables, table of title details,
frequency of launches) and two other pieces of information:

  - the source of the binary that was launched :: this information is
       provided by ~auditd~ and indexed by Elasticsearch.  Because we
       install different types of software in different locations, we
       can get a sense of the types of software commonly used by
       looking at this
  - the rate of change of software executions :: the "Change in Last
       Hour" chart shows whether more or fewer binaries are being
       launched now than an hour ago.  In general, this is a useless
       statistic, but if you happen to be looking at the Kibana page
       and see a large increase in software being launched it may help
       you diagnose a problem or be alert to an impending problem on
       the file server that delivers the software.

Version 3 of Kibana doesn't support aggregations (similar to SQL
~JOIN~ statements), but Version 4 is predicted to, and aggregations
are still possible using JSON-structured queries sent directly to the
Elasticsearch servers.

* Local Dictionary 						   :noexport:
#  LocalWords:  Elasticsearch Logstash username Lucene Kibana Redis
#  LocalWords:  analytics DSL API

* Footnotes

[fn:1] If that isn't a verb, it really should be.
